@model TestingSite.Models.LoginViewModel

@{
    ViewBag.Title = "Log in";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-12">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                <div class="row">
                    <div class="col-lg-4">

                        <div class="help-block">
                            Alert box

                        </div>
                        @Html.BootStrapValidationSummary(new BootStrapExtensions.BootstrapValidationSummaryOptions()
          {
              DisplayMode = BootStrapExtensions.ErrorMode.Alert

          })

                    </div>
                    <div class="col-lg-4">
                        <div class="help-block">
                            Closable Alert box 

                        </div>
                        @Html.BootStrapValidationSummary(new BootStrapExtensions.BootstrapValidationSummaryOptions()
{
    DisplayMode = BootStrapExtensions.ErrorMode.ClosableAlert

})
                    </div>
                    <div class="col-lg-4">
                        <div class="help-block">
                            Panel

                        </div>
                        @Html.BootStrapValidationSummary(new BootStrapExtensions.BootstrapValidationSummaryOptions()
{
    DisplayMode = BootStrapExtensions.ErrorMode.Panel

})
                    </div>

                </div>

                <div class="row">
                    <div class="col-lg-8">
                        <div class="help-block">
                            Collapsable Panel

                        </div>
                        @Html.BootStrapValidationSummary(new BootStrapExtensions.BootstrapValidationSummaryOptions()
{
    DisplayMode = BootStrapExtensions.ErrorMode.CollapsePanel

})

                    </div>
                </div>


    @Html.BootStrapValidationSummary(new BootStrapExtensions.BootstrapValidationSummaryOptions()
{
    DisplayMode = BootStrapExtensions.ErrorMode.Modal

})


                @Html.ValidationSummary()




                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Password)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.RememberMe)
                            @Html.LabelFor(m => m.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log in" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register", "Register") if you don't have a local account.
                </p>
            }
        </section>
    </div>
    @*<div class="col-md-4">
            <section id="socialLoginForm">
                @Html.Partial("_ExternalLoginsListPartial", new { Action = "ExternalLogin", ReturnUrl = ViewBag.ReturnUrl })
            </section>
        </div>*@
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}